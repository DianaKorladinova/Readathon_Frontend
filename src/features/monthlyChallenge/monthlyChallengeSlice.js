import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';
import {fetchChallenge} from './monthlyChallengeAPI';

const initialState = {
    books: [],
    status: 'idle',
};


export const fetchMonthlyChallenge = createAsyncThunk(
    'monthlyChallenge/fetchChallenge',
    async () => {
        const response = await fetchChallenge();
        return response.books;
    }
);

export const monthlyChallengeSlice = createSlice({
    name: 'challenge',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {},
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {
        builder
            .addCase(fetchMonthlyChallenge.pending, (state) => {
                state.status = 'loading';
            })
            .addCase(fetchMonthlyChallenge.fulfilled, (state, action) => {
                state.status = 'idle';
                state.books = action.payload
            });
    },
});

export default monthlyChallengeSlice.reducer;
